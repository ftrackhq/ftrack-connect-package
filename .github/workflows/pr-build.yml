name: CI

on:
  push:
    branches: [ backlog/gh-build-and-release-on-pr ]
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  build-connect-package-linux:
    name: Build Connect package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Branch name
        id: get_tag
        run: |
          git fetch -a
          echo "SOURCE_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
      - name: Install Connect
        run: |
          python -VV
          pip install -e git+https://github.com/ftrackhq/ftrack-connect.git@2.1.1#egg=ftrack_connect
          pip list
          echo "CONNECT_SOURCE_LOCATION=$(pip show ftrack-connect | grep Location: | cut -d' ' -f 2-)" >> $GITHUB_ENV
      - name: Install Connect deps
        run: |
          pip install -r ${{ env.CONNECT_SOURCE_LOCATION }}/../requirements.txt
      - name: Install Connect package deps
        run: |
          pip install -r requirements.txt
          pip list
      - name: Build plugin
        run: |
          python setup.py build_exe
      - name: Compress plugin
        run: |
          cd build
          tar -zcvf ftrack-connect-package-${{ env.SOURCE_TAG }}.tar.gz exe.linux-x86_64-3.7 --transform 's/exe.linux-x86_64-3.7/ftrack-connect-package/'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.SOURCE_TAG }}-${{github.sha}}
          release_name: PR test release ${{ env.SOURCE_TAG }}-${{github.sha}}(${{ github.head_ref }})
          body: |
            Please check PR for details.
          draft: false
          prerelease: true
      - uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "build/*.tar.gz"
          release_id: ${{ steps.create_release.outputs.id }}
          overwrite: true
          verbose: true